name: Comprehensive Testing

on:
  push:
    branches: [master, develop]
  pull_request:
    branches: [master, develop]

jobs:
  comprehensive:
    name: Comprehensive Testing
    runs-on: ubuntu-latest

    steps:
      - name: Check out code
        uses: actions/checkout@v4

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version: "1.24"

      - name: Cache Go modules
        uses: actions/cache@v4
        with:
          path: |
            ~/.cache/go-build
            ~/go/pkg/mod
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Install golangci-lint
        uses: golangci/golangci-lint-action@v8
        with:
          version: latest
          install-mode: "goinstall"

      - name: Install xcaddy
        run: bash -c "go install github.com/caddyserver/xcaddy/cmd/xcaddy@latest"

      - name: Fix dependencies
        run: ./.github/scripts/fix-deps.sh

      - name: Download dependencies
        run: make deps

      - name: Run all CI checks
        run: make ci

      - name: Test with different configurations
        run: |
          # Test simple configuration
          echo "Testing simple_test.go specifically..."
          go test -v -run TestGetClientIPSimple ./...
          go test -v -run TestMetricsRegistration ./...
          go test -v -run TestDuplicateRegistration ./...

          # Test comprehensive configuration  
          echo "Testing comprehensive_test.go specifically..."
          go test -v -run TestHeaderMetricsProcessing ./...
          go test -v -run TestClientIPExtractionComprehensive ./...
          go test -v -run TestMetricsAccuracy ./...
          go test -v -run TestConcurrentMetricsCollection ./...
          go test -v -run TestMetricsWithDifferentURLPatterns ./...
          go test -v -run TestMetricsWithSpecialCharacters ./...

          # Test benchmark functions
          echo "Testing benchmark_test.go specifically..."
          go test -v -run BenchmarkClientIPExtraction ./...
          go test -v -run BenchmarkHeaderMetricsCollection ./...
          go test -v -run BenchmarkMetricsRegistration ./...
